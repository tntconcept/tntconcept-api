openapi: 3.0.1
info:
  title: tntconcept API
  version: 0.0.1
servers:
- url: http://localhost:8080/
tags:
- name: security
  description: Security related endpoints.
- name: activity
  description: Activity related endpoints.
paths:
  /api-hook/activity:
    get:
      summary: Gets activities between two dates.
      operationId: get$tntconcept_rest
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: user
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityDateResponse'
    post:
      summary: Creates a new activity.
      operationId: post$tntconcept_rest
      requestBody:
        content:
          application/json:
            schema:
              required:
              - activityRequest
              type: object
              properties:
                activityRequest:
                  $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        "200":
          description: post$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
  /api-hook/organization:
    get:
      summary: Retrieves a list of all organizations
      operationId: getAllOrganizations
      responses:
        "200":
          description: getAllOrganizations 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
  /api-hook/organization/{id}/project:
    get:
      summary: Retrieves a list of imputable projects from an organization ID
      operationId: getOrganizationsProjects
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrganizationsProjects 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
  /api-hook/project/{id}/role:
    get:
      summary: Retrieves a list of project roles from a project ID
      operationId: getProjectRolesByProjectId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getProjectRolesByProjectId 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleResponse'
  /api/absence:
    get:
      tags:
      - absence
      summary: Gets absence days with specified filters
      operationId: get$tntconcept_rest_1
      parameters:
      - name: absenceFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/AbsenceFilterRequest'
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAbsenceResponse'
  /api/activity:
    get:
      tags:
      - activity
      summary: Gets activities with specified filters
      operationId: get$tntconcept_rest_2
      parameters:
      - name: activityFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/ActivityFilterRequest'
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityResponse'
    put:
      tags:
      - activity
      summary: Updates an existing activity
      operationId: put$tntconcept_rest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        "200":
          description: put$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
    post:
      tags:
      - activity
      summary: Creates a new activity
      operationId: post$tntconcept_rest_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        "200":
          description: post$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
  /api/activity/summary:
    get:
      tags:
      - activity
      summary: Gets activities summary between two dates
      operationId: summary$tntconcept_rest
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: summary$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitySummaryResponse'
  /api/activity/{id}:
    get:
      tags:
      - activity
      summary: Gets an activity by its id.
      operationId: get$tntconcept_rest_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
    delete:
      tags:
      - activity
      summary: Deletes an activity by its id.
      operationId: delete$tntconcept_rest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: delete$tntconcept_rest 200 response
  /api/activity/{id}/approve:
    post:
      tags:
      - activity
      summary: Approve an existing activity by id.
      operationId: approve$tntconcept_rest
      requestBody:
        content:
          application/json:
            schema:
              required:
              - locale
              type: integer
              properties:
                locale:
                  $ref: '#/components/schemas/Locale'
              format: int64
        required: true
      responses:
        "200":
          description: approve$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
  /api/activity/{id}/evidence:
    get:
      tags:
      - activity
      summary: Retrieves an activity evidence by the activity id.
      operationId: getEvidenceByActivityId$tntconcept_rest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getEvidenceByActivityId$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: string
  /api/attachment:
    post:
      tags:
      - attachment
      summary: Create an attachment
      operationId: createAttachment$tntconcept_rest
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - attachmentFile
              type: object
              properties:
                attachmentFile:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: createAttachment$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentCreationResponse'
  /api/attachment/{id}:
    get:
      tags:
      - attachment
      summary: Retrieves an attachment
      operationId: getAttachment$tntconcept_rest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: getAttachment$tntconcept_rest 200 response
          content:
            multipart/form-data:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/calendar/days/count:
    get:
      summary: Retrieves the days within a given period in the time unit of the selected
        project role
      operationId: getNumberOfDaysOfPeriodByProjectRole$tntconcept_rest
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: roleId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getNumberOfDaysOfPeriodByProjectRole$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/calendar/workable-days/count:
    get:
      summary: Retrieves workable days within a given period.
      operationId: getNumberOfWorkableDays$tntconcept_rest
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getNumberOfWorkableDays$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/holiday:
    get:
      tags:
      - holiday
      summary: Retrieves existing holidays given a year
      operationId: getHolidaysByYear
      parameters:
      - name: year
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: getHolidaysByYear 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HolidayDetailsResponse'
  /api/holidays:
    get:
      summary: Retrieves existing holidays within a period
      operationId: getHolidaysBetweenDate
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getHolidaysBetweenDate 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidaysResponse'
      deprecated: true
  /api/organization:
    get:
      tags:
      - organization
      summary: Retrieves a list of organizations by filter
      operationId: getAllOrganizations_1
      parameters:
      - name: organizationFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/OrganizationFilterRequest'
      responses:
        "200":
          description: getAllOrganizations_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
  /api/organizations:
    get:
      summary: Retrieves a list of all organizations
      operationId: getAllOrganizations_2
      responses:
        "200":
          description: getAllOrganizations_2 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
      deprecated: true
  /api/organizations/{id}/projects:
    get:
      summary: Retrieves a list of imputable projects from an organization ID
      operationId: getOrganizationsProjects_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrganizationsProjects_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
      deprecated: true
  /api/project:
    get:
      tags:
      - project
      summary: Gets projects with specified filters
      operationId: get
      parameters:
      - name: projectFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/ProjectFilterRequest'
      responses:
        "200":
          description: get 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
  /api/project-role/latest:
    get:
      summary: Retrieves recent used roles
      operationId: getLatestRoles
      parameters:
      - name: year
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: getLatestRoles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleUserResponse'
  /api/project-role/{id}:
    get:
      summary: Retrieves a project role by a given ID
      operationId: getProjectRoleById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getProjectRoleById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRoleResponse'
  /api/project/{id}:
    get:
      tags:
      - project
      summary: Retrieves a project´s information from its ID
      operationId: getProjectById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getProjectById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /api/project/{projectId}/block:
    post:
      tags:
      - project
      summary: Blocks a project until given date
      operationId: blockProjectById
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockProjectRequest'
        required: true
      responses:
        "200":
          description: blockProjectById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /api/project/{projectId}/role:
    get:
      tags:
      - project
      summary: Retrieves a list of project roles from a project ID
      operationId: getProjectRolesByProjectId_1
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: year
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: userId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: getProjectRolesByProjectId_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleUserResponse'
  /api/project/{projectId}/unblock:
    post:
      tags:
      - project
      summary: Unblocks a project
      operationId: unblockProjectById
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: unblockProjectById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /api/search:
    get:
      operationId: searchBy
      parameters:
      - name: roleIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: year
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: searchBy 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  /api/subcontracted-activity:
    get:
      tags:
      - subcontracted-activity
      summary: Gets activities with specified filters
      operationId: get$tntconcept_rest_4
      parameters:
      - name: activityFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/SubcontractedActivityFilterRequest'
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcontractedActivityResponse'
    put:
      tags:
      - subcontracted-activity
      summary: Updates an existing subcontracted activity
      operationId: put$tntconcept_rest_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcontractedActivityRequest'
        required: true
      responses:
        "200":
          description: put$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcontractedActivityResponse'
    post:
      tags:
      - subcontracted-activity
      summary: Creates a new subcontracted activity
      operationId: post$tntconcept_rest_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcontractedActivityRequest'
        required: true
      responses:
        "200":
          description: post$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcontractedActivityResponse'
  /api/subcontracted-activity/{id}:
    get:
      tags:
      - subcontracted-activity
      summary: Gets an activity by its id.
      operationId: get$tntconcept_rest_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcontractedActivityResponse'
    delete:
      tags:
      - subcontracted-activity
      summary: Deletes a subcontracted activity by its id.
      operationId: delete$tntconcept_rest_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: delete$tntconcept_rest 200 response
  /api/time-summary:
    get:
      summary: Retrieves working time from a given date
      operationId: getTimeSummary
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getTimeSummary 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSummaryResponse'
  /api/user:
    get:
      summary: Retrieves the list of users with specified filters
      operationId: get$tntconcept_rest_6
      parameters:
      - name: userFilterRequest
        in: query
        required: true
        explode: true
        schema:
          $ref: '#/components/schemas/UserFilterRequest'
      responses:
        "200":
          description: get$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
  /api/user/me:
    get:
      summary: Retrieves the logged user
      operationId: getUser$tntconcept_rest
      responses:
        "200":
          description: getUser$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
  /api/vacation:
    get:
      tags:
      - vacation
      summary: Retrieves holidays within a given a period.
      operationId: getUsersVacationsFromPeriod$tntconcept_rest
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getUsersVacationsFromPeriod$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacationResponse'
  /api/vacations:
    get:
      summary: Retrieves holidays within a given charge year.
      operationId: getPrivateHolidaysByChargeYear$tntconcept_rest
      parameters:
      - name: chargeYear
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getPrivateHolidaysByChargeYear$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidaysResponse'
      deprecated: true
    put:
      summary: Updates a holiday period.
      operationId: updatePrivateHolidayPeriod$tntconcept_rest
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateVacationRequest'
              - required:
                - locale
                properties:
                  locale:
                    $ref: '#/components/schemas/Locale'
        required: true
      responses:
        "200":
          description: updatePrivateHolidayPeriod$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVacationResponse'
    post:
      summary: Creates a holiday period.
      operationId: createPrivateHolidayPeriod$tntconcept_rest
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateVacationRequest'
              - required:
                - locale
                properties:
                  locale:
                    $ref: '#/components/schemas/Locale'
        required: true
      responses:
        "200":
          description: createPrivateHolidayPeriod$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVacationResponse'
  /api/vacations/details:
    get:
      summary: Retrieves details for a holiday within a given charge year.
      operationId: getPrivateHolidayDetails$tntconcept_rest
      parameters:
      - name: chargeYear
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getPrivateHolidayDetails$tntconcept_rest 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationDetailsResponse'
  /api/vacations/{id}:
    delete:
      summary: Deletes a holiday period by a given ID.
      operationId: deletePrivateHolidayPeriod$tntconcept_rest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deletePrivateHolidayPeriod$tntconcept_rest 200 response
  /api/version:
    get:
      summary: Retrieves api version
      description: 200 expected
      operationId: getVersion
      responses:
        "200":
          description: getVersion 200 response
          content:
            application/json:
              schema:
                type: string
  /login:
    post:
      tags:
      - security
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernamePasswordCredentials'
          application/json:
            schema:
              $ref: '#/components/schemas/UsernamePasswordCredentials'
        required: true
      responses:
        "200":
          description: login 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  /logout:
    get:
      tags:
      - security
      operationId: indexGet
      responses:
        "200":
          description: indexGet 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
    post:
      tags:
      - security
      operationId: index
      responses:
        "200":
          description: index 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  /oauth/access_token:
    get:
      tags:
      - security
      operationId: index_1
      parameters:
      - name: JWT_REFRESH_TOKEN
        in: cookie
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: index_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
    post:
      tags:
      - security
      operationId: index_2
      parameters:
      - name: JWT_REFRESH_TOKEN
        in: cookie
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        "200":
          description: index_2 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
components:
  schemas:
    AbsenceFilterRequest:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        userIds:
          type: string
          nullable: true
        organizationIds:
          type: string
          nullable: true
        projectIds:
          type: string
          nullable: true
    AbsenceResponse:
      required:
      - endDate
      - startDate
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AbsenceType'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    AbsenceType:
      type: string
      enum:
      - VACATION
      - PAID_LEAVE
    ActivityDateResponse:
      required:
      - activities
      - date
      - workedMinutes
      type: object
      properties:
        date:
          type: string
          format: date
        workedMinutes:
          type: integer
          format: int32
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityResponse'
    ActivityFilterRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        approvalState:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ApprovalStateActivityFilter'
        organizationId:
          type: integer
          format: int64
          nullable: true
        projectId:
          type: integer
          format: int64
          nullable: true
        roleId:
          type: integer
          format: int64
          nullable: true
        userId:
          type: integer
          format: int64
          nullable: true
    ActivityRequest:
      required:
      - billable
      - description
      - hasEvidences
      - interval
      - projectRoleId
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        interval:
          $ref: '#/components/schemas/TimeIntervalRequest'
        description:
          maxLength: 2048
          type: string
        billable:
          type: boolean
        projectRoleId:
          type: integer
          format: int64
        hasEvidences:
          type: boolean
        evidence:
          pattern: "^data:[^,]+;base64,.+$"
          type: string
          nullable: true
    ActivityResponse:
      required:
      - approval
      - billable
      - description
      - id
      - interval
      - projectRoleId
      - userId
      type: object
      properties:
        billable:
          type: boolean
        description:
          type: string
        hasEvidences:
          type: boolean
          nullable: true
        id:
          type: integer
          format: int64
        projectRoleId:
          type: integer
          format: int64
        interval:
          $ref: '#/components/schemas/IntervalResponse'
        userId:
          type: integer
          format: int64
        approval:
          $ref: '#/components/schemas/Approval'
    ActivitySummaryResponse:
      required:
      - date
      - worked
      type: object
      properties:
        date:
          type: string
          format: date
        worked:
          type: number
    AnnualBalanceResponse:
      required:
      - balance
      - notRequestedVacations
      - target
      - worked
      type: object
      properties:
        worked:
          type: number
        target:
          type: number
        notRequestedVacations:
          type: number
        balance:
          type: number
    Approval:
      required:
      - canBeApproved
      - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ApprovalState'
        canBeApproved:
          type: boolean
        approvedByUserId:
          type: integer
          format: int64
          nullable: true
        approvalDate:
          type: string
          format: date-time
          nullable: true
    ApprovalState:
      type: string
      enum:
      - NA
      - PENDING
      - ACCEPTED
    ApprovalStateActivityFilter:
      type: string
      enum:
      - NA
      - PENDING
      - ACCEPTED
      - ALL
    AttachmentCreationResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: string
    BlockProjectRequest:
      required:
      - blockDate
      type: object
      properties:
        blockDate:
          type: string
          format: date
    CreateVacationRequest:
      required:
      - chargeYear
      - endDate
      - startDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        chargeYear:
          type: integer
          format: int32
        description:
          maxLength: 1024
          type: string
          nullable: true
    CreateVacationResponse:
      required:
      - chargeYear
      - days
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        days:
          type: integer
          format: int32
        chargeYear:
          type: integer
          format: int32
    HolidayDetailsResponse:
      required:
      - date
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        date:
          type: string
          format: date
    HolidaysResponse:
      required:
      - holidays
      - vacations
      type: object
      properties:
        holidays:
          type: array
          items:
            $ref: '#/components/schemas/HolidayDetailsResponse'
        vacations:
          type: array
          items:
            $ref: '#/components/schemas/VacationResponse'
    IntervalResponse:
      required:
      - duration
      - end
      - start
      - timeUnit
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
    Locale:
      required:
      - country
      - language
      - variant
      type: object
      properties:
        language:
          type: string
        script:
          type: string
        country:
          type: string
        variant:
          type: string
        extensionKeys:
          type: array
          items:
            type: string
        unicodeLocaleAttributes:
          type: array
          items:
            type: string
        unicodeLocaleKeys:
          type: array
          items:
            type: string
        ISO3Language:
          type: string
        ISO3Country:
          type: string
        displayLanguage:
          type: string
        displayScript:
          type: string
        displayCountry:
          type: string
        displayVariant:
          type: string
        displayName:
          type: string
    MaxTimeAllowedResponse:
      required:
      - byActivity
      - byYear
      type: object
      properties:
        byYear:
          type: integer
          format: int32
        byActivity:
          type: integer
          format: int32
    Month:
      type: string
      enum:
      - JANUARY
      - FEBRUARY
      - MARCH
      - APRIL
      - MAY
      - JUNE
      - JULY
      - AUGUST
      - SEPTEMBER
      - OCTOBER
      - NOVEMBER
      - DECEMBER
    MonthlyBalanceResponse:
      required:
      - balance
      - recommended
      - roles
      - vacations
      - workable
      - worked
      type: object
      properties:
        workable:
          type: number
        worked:
          type: number
        recommended:
          type: number
        balance:
          type: number
        roles:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyRolesResponse'
        vacations:
          $ref: '#/components/schemas/VacationsResponse'
    MonthlyRolesResponse:
      required:
      - hours
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        hours:
          type: number
    Object:
      type: object
    OrganizationFilterRequest:
      type: object
      properties:
        types:
          type: string
          nullable: true
        imputable:
          type: boolean
          nullable: true
    OrganizationResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PreviousAnnualBalanceResponse:
      required:
      - balance
      - target
      - worked
      type: object
      properties:
        worked:
          type: number
        target:
          type: number
        balance:
          type: number
    ProjectFilterRequest:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
          nullable: true
        organizationIds:
          type: string
          nullable: true
        open:
          type: boolean
          nullable: true
    ProjectResponse:
      required:
      - billable
      - id
      - name
      - open
      - organizationId
      - startDate
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        open:
          type: boolean
        billable:
          type: boolean
        organizationId:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
        blockDate:
          type: string
          format: date
          nullable: true
        blockedByUser:
          type: integer
          format: int64
          nullable: true
    ProjectRoleResponse:
      required:
      - id
      - isWorkingTime
      - name
      - organizationId
      - projectId
      - requireApproval
      - requireEvidence
      - timeInfo
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        timeInfo:
          $ref: '#/components/schemas/TimeInfoResponse'
        isWorkingTime:
          type: boolean
        requireEvidence:
          $ref: '#/components/schemas/RequireEvidence'
        requireApproval:
          type: boolean
    ProjectRoleUserResponse:
      required:
      - id
      - name
      - organizationId
      - projectId
      - requireApproval
      - requireEvidence
      - timeInfo
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        timeInfo:
          $ref: '#/components/schemas/TimeInfoResponse'
        requireEvidence:
          $ref: '#/components/schemas/RequireEvidence'
        requireApproval:
          type: boolean
        userId:
          type: integer
          format: int64
    RequireEvidence:
      type: string
      enum:
      - "NO"
      - ONCE
      - WEEKLY
    SearchResponse:
      required:
      - organizations
      - projectRoles
      - projects
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleUserResponse'
    SubcontractedActivityFilterRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        organizationId:
          type: integer
          format: int64
          nullable: true
        projectId:
          type: integer
          format: int64
          nullable: true
        roleId:
          type: integer
          format: int64
          nullable: true
    SubcontractedActivityRequest:
      required:
      - description
      - duration
      - month
      - projectRoleId
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        month:
          $ref: '#/components/schemas/YearMonth'
        duration:
          type: integer
          format: int32
        description:
          maxLength: 2048
          type: string
        projectRoleId:
          type: integer
          format: int64
        evidence:
          pattern: "^data:[^,]+;base64,.+$"
          type: string
          nullable: true
    SubcontractedActivityResponse:
      required:
      - description
      - duration
      - id
      - month
      - projectRoleId
      - userId
      type: object
      properties:
        duration:
          type: integer
          format: int32
        description:
          type: string
        id:
          type: integer
          format: int64
        projectRoleId:
          type: integer
          format: int64
        month:
          $ref: '#/components/schemas/YearMonth'
        userId:
          type: integer
          format: int64
    TimeInfoResponse:
      required:
      - maxTimeAllowed
      - timeUnit
      type: object
      properties:
        maxTimeAllowed:
          $ref: '#/components/schemas/MaxTimeAllowedResponse'
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        userRemainingTime:
          type: integer
          format: int32
          nullable: true
    TimeIntervalRequest:
      required:
      - end
      - start
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    TimeSummaryResponse:
      required:
      - months
      - year
      type: object
      properties:
        year:
          $ref: '#/components/schemas/YearAnnualBalanceResponse'
        months:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyBalanceResponse'
    TimeUnit:
      type: string
      enum:
      - MINUTES
      - DAYS
      - NATURAL_DAYS
    TokenRefreshRequest:
      required:
      - grant_type
      - refresh_token
      type: object
      properties:
        grant_type:
          minLength: 1
          pattern: refresh_token
          type: string
        refresh_token:
          minLength: 1
          type: string
    UserAbsenceResponse:
      required:
      - absences
      - userId
      - userName
      type: object
      properties:
        userId:
          type: integer
          format: int64
        userName:
          type: string
        absences:
          type: array
          items:
            $ref: '#/components/schemas/AbsenceResponse'
    UserFilterRequest:
      type: object
      properties:
        ids:
          type: string
          nullable: true
        active:
          type: boolean
          nullable: true
        nameLike:
          type: string
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
    UserInfoResponse:
      required:
      - hiringDate
      - id
      - roles
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        hiringDate:
          type: string
          format: date
        roles:
          type: array
          items:
            type: string
    UserResponse:
      required:
      - id
      - name
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
    UsernamePasswordCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        identity:
          type: string
        secret:
          type: string
    VacationDetailsResponse:
      required:
      - acceptedVacations
      - correspondingVacations
      - holidaysAgreement
      - remainingVacations
      type: object
      properties:
        holidaysAgreement:
          type: integer
          format: int32
        correspondingVacations:
          type: integer
          format: int32
        acceptedVacations:
          type: integer
          format: int32
        remainingVacations:
          type: integer
          format: int32
    VacationResponse:
      required:
      - chargeYear
      - days
      - endDate
      - startDate
      - state
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        observations:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        state:
          $ref: '#/components/schemas/VacationState'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        days:
          type: array
          items:
            type: string
            format: date
        chargeYear:
          type: string
          format: date
    VacationState:
      type: string
      enum:
      - PENDING
      - ACCEPT
      - REJECT
      - CANCELLED
    VacationsResponse:
      required:
      - charged
      - enjoyed
      type: object
      properties:
        charged:
          type: number
        enjoyed:
          type: number
    YearAnnualBalanceResponse:
      required:
      - current
      - previous
      type: object
      properties:
        previous:
          $ref: '#/components/schemas/PreviousAnnualBalanceResponse'
        current:
          $ref: '#/components/schemas/AnnualBalanceResponse'
    YearMonth:
      type: object
      properties:
        year:
          type: integer
          format: int32
        monthValue:
          type: integer
          format: int32
        month:
          $ref: '#/components/schemas/Month'
        leapYear:
          type: boolean
